# Generated from:
# https://github.com/zopefoundation/meta/tree/master/config/pure-python
name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 12 * * 0'  # run once a week on Sunday
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      # We want to see all failures:
      fail-fast: false
      matrix:
        os:
        - ["ubuntu", "ubuntu-latest"]
        - ["windows", "windows-latest"]
        config:
        # [Python version, tox env]
        - ["3.11", "release-check"]
        - ["3.9", "py39"]
        - ["3.10", "py310"]
        - ["3.11", "py311"]
        - ["3.12", "py312"]
        - ["3.13", "py313"]
        - ["3.11", "docs"]
        - ["3.11", "coverage"]
        - ["3.11", "py311-datetime"]
        exclude:
          - { os: ["windows", "windows-latest"], config: ["3.11", "release-check"] }
          - { os: ["windows", "windows-latest"], config: ["3.11", "docs"] }
          - { os: ["windows", "windows-latest"], config: ["3.11", "coverage"] }

    runs-on: ${{ matrix.os[1] }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: ${{ matrix.os[0] }}-${{ matrix.config[1] }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.config[0] }}
        allow-prereleases: true
    - name: Pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.config[0] }}-${{ hashFiles('setup.*', 'tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.config[0] }}-
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test
      if: ${{ !startsWith(runner.os, 'Mac') }}
      run: tox -e ${{ matrix.config[1] }}
    - name: Test (macOS)
      if: ${{ startsWith(runner.os, 'Mac') }}
      run: tox -e ${{ matrix.config[1] }}-universal2
    - name: Coverage
      if: matrix.config[1] == 'coverage'
      run: |
        pip install coveralls
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

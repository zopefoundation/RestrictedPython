# Generated from:
# https://github.com/zopefoundation/meta/tree/master/config/pure-python
name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 12 * * 0'  # run once a week on Sunday
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      # We want to see all failures:
      fail-fast: false
      matrix:
        os:
        - ubuntu
        - windows
        config:
        # [Python version, tox env]
        - ["3.9",   "lint"]
        - ["3.6",   "py36"]
        - ["3.7",   "py37"]
        - ["3.8",   "py38"]
        - ["3.9",   "py39"]
        - ["3.10",  "py310"]
        - ["3.11.0-rc.2",  "py311"]
        - ["3.9",   "docs"]
        - ["3.9",   "py39-datetime"]
        exclude:
          - { os: windows, config: ["3.9",   "lint"] }
          - { os: windows, config: ["3.9",   "docs"] }

    runs-on: ${{ matrix.os }}-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: ${{ matrix.os }}-${{ matrix.config[1] }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config[0] }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.config[0] }}-${{ hashFiles('setup.*', 'tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.config[0] }}-
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Test
      run: tox -e ${{ matrix.config[1] }}

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      if: matrix.os != 'windows'
      with:
        name: coverage-data
        path: .coverage.${{ matrix.config[1] }}
        if-no-files-found: ignore

  coverage:
    name: Combined coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          # Use latest, so it understands all syntax.
          python-version: "3.10"
      - run: python -m pip install --upgrade coveralls coverage[toml]

      - name: Download coverage data.
        uses: actions/download-artifact@v2
        with:
          name: coverage-data

      - name: Indicate completion to coveralls.io
        run: |
          python -m coverage combine
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Coverage report and fail if it's <100%.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=100

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}
